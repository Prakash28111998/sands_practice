package com.simplilearn.mavenproject;

//import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.testng.Assert.assertEquals;
import static org.testng.Assert.assertTrue;

import java.io.IOException;
import java.sql.Driver;
import java.time.Duration;

import org.checkerframework.checker.units.qual.m;
import org.openqa.selenium.By;
import org.openqa.selenium.JavascriptExecutor;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.chrome.ChromeOptions;
import org.openqa.selenium.edge.EdgeDriver;
import org.openqa.selenium.firefox.FirefoxDriver;
import org.openqa.selenium.interactions.Actions;
import org.openqa.selenium.support.ui.ExpectedConditions;
import org.openqa.selenium.support.ui.WebDriverWait;
import org.testng.Assert;

public class Sands {
	 //static WebDriver driver = new EdgeDriver();
	// static WebDriver driver = new FirefoxDriver();
	static ChromeOptions option = new ChromeOptions();

	static WebDriver driver ;//= new ChromeDriver();
	
	static Actions a; //= new Actions(driver);

	public static void sands_Logo() {
		// TODO Auto-generated method stub
		driver.findElement(By.cssSelector("div.logo")).isDisplayed();
	}

	// function utility_solution
	static void utility_solution() {
		a.moveToElement(driver.findElement(By.xpath("//a[text()='Utility Solutions']"))).build().perform();
	}

	public static void Product() {
		utility_solution();
		a.moveToElement(driver.findElement(By.xpath("//a[text()='Meter Reading Products']"))).build().perform();
	}

	static void optical_probe() {
		driver.findElement(By.xpath("//a[text()='Optical Probe']")).click();
		String text = driver.findElement(By.id("side_column_a_op")).getText();
		String string = text.split("01")[1];

		System.out.println(string.trim());

		String UP_1001 = driver.findElement(By.id("PG016_R07C01")).getText().toUpperCase();
		//UP_1001.split(")"\n");
		boolean contains = UP_1001.contains(string);
		
		System.out.println(UP_1001);
		// assertTrue(contains);
		driver.findElement(By.cssSelector("div.logo")).isDisplayed();
		Product();
	}

	public static void main(String[] args) throws InterruptedException, IOException {
		
		option.addArguments("--incognito");
		driver = new ChromeDriver(option);
		a = new Actions(driver);
		
		driver.manage().timeouts().implicitlyWait(Duration.ofSeconds(3000));
		Sands s = new Sands();
		Industrial_Solutions solu = new Industrial_Solutions();
		JavascriptExecutor ja = (JavascriptExecutor) driver;
		Meter_testing_Project metertesting_Sprs = new Meter_testing_Project();
		driver.get("https://www.sandsindia.com/");
		driver.manage().window().maximize();
		driver.manage().deleteAllCookies();
		
		
		// Logo displayed
		driver.findElement(By.cssSelector("div.logo")).isDisplayed();
		driver.findElement(By.xpath("//a[text()='About us']")).click();
		utility_solution();

		a.moveToElement(driver.findElement(By.xpath("//a[text()='Meter Reading Products']"))).build().perform();
		driver.findElement(By.xpath("//a[text()='CMRI']")).click();
		ja.executeScript("window.scrollBy(0,500)");
		WebElement Spec = driver.findElement(By.id("PG007_R07C02"));
		Spec.click();

		assertEquals(All_Url_page.CMRI, driver.getCurrentUrl());

		String ActualTitle = "SPECIFICATIONS";
		assertEquals(ActualTitle, Spec.getText());

		Spec.isEnabled();
		WebElement acc = driver.findElement(By.id("PG007_R07C03"));
		acc.click();
		String access = "ACCESSORIES";
		System.out.println(access + acc.isEnabled());
		assertEquals(access, acc.getText());
		Product();

		driver.findElement(By.xpath("//a[text()='OPAL']")).click();
		assertEquals(All_Url_page.CMRIOPAL, driver.getCurrentUrl());

		sands_Logo();
		Product();

		optical_probe();

		driver.findElement(By.linkText("AMR-AMI solutions")).click();
		Product();
		driver.findElement(By.linkText("Smart Meter Reading APP")).click();
		driver.findElement(By.cssSelector("div.logo")).isDisplayed();

		metertesting_Sprs.product_Meter_testing();
		ja.executeScript("window.scrollBy(0,500)");
		ja.executeScript("window.scrollBy(0,500)");
		metertesting_Sprs.GPS_Time_Server_SYNTIME_GPS_Time_Server();
		metertesting_Sprs.GPS_Time_Server_GPS_Time_Server_DIN_RAIL();
		metertesting_Sprs.NTP_SNTP_Converter();
		metertesting_Sprs.IRIG_B_Booster();
		metertesting_Sprs.IRIG_B_RS485_Converter();
		metertesting_Sprs.GPS_Clock();
		metertesting_Sprs.GPS_Wireless_Clock();
		metertesting_Sprs.GPS_Standalone_Clock();
		metertesting_Sprs.frequency_kilovolte_Mega_displays();
		metertesting_Sprs.Stator_Protection_Kit();
		metertesting_Sprs.CRUX_Meter_Data_Analytics();
		metertesting_Sprs.HVLWTK();
		solu.IndustrialSolutions();
		solu.Energy_Management_System();

	}

}
